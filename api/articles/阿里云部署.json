{"title":"Docker+阿里云服务器部署RPC服务","uid":"8943ab2addc2f45e81298f247910b5c2","slug":"阿里云部署","date":"2023-11-04T05:53:12.000Z","updated":"2023-11-04T06:00:13.030Z","comments":true,"path":"api/articles/阿里云部署.json","keywords":null,"cover":"https://cdn.statically.io/gh/moonlightleaf/pics@master/项目记录/docker-facebook.787s7ktssq80.webp","content":"<h1 id=\"Docker-阿里云服务器部署RPC服务\"><a href=\"#Docker-阿里云服务器部署RPC服务\" class=\"headerlink\" title=\"Docker+阿里云服务器部署RPC服务\"></a>Docker+阿里云服务器部署RPC服务</h1><p><strong>1.</strong> ssh连接远端服务后，安装docker：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">apt install docker.io</code></pre>\n\n<p><strong>2.</strong> 查找一个gcc13版本的镜像：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">docker search gcc13</code></pre>\n\n<p><strong>3.</strong> 随便挑选一个拉取（1.3G，小水管拉了一年…）：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">docker pull kthnode&#x2F;gcc13-ubuntu20.04</code></pre>\n\n<p><strong>4.</strong> 创建数据卷：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">docker volume create gcc13_data</code></pre>\n\n<p><strong>5.</strong> 创建容器，挂载数据卷，建立端口映射，打开bash：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">docker run -it --name gcc13_docker -v gcc13_data -p 9877:9877 kthnode&#x2F;gcc13-ubuntu20.04 &#x2F;bin&#x2F;bash</code></pre>\n\n<p><strong>6.</strong> 检查容器中软件版本，gcc13，CMake3.25，满足需求，安装clang-format：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">apt update\napt install clang-format</code></pre>\n\n<p><strong>7.</strong> 在工作目录下克隆远端仓库：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">git clone https:&#x2F;&#x2F;github.com&#x2F;moonlightleaf&#x2F;mudong-rpc.git</code></pre>\n\n<p><strong>8.</strong> 根据安装说明使用：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">cd mudong-rpc \ngit submodule update --init --recursive\nmkdir build &amp;&amp; cd build\ncmake -DCMAKE_BUILD_EXAMPLES&#x3D;1 ..\nmake install</code></pre>\n\n<p><strong>9.</strong> 开放系统RPC服务端口的防火墙权限，并在阿里云服务台上设置安全组，开放服务器指定端口，详情可参考<a href=\"https://blog.csdn.net/crazestone0614/article/details/126923555\">这篇博客</a>。</p>\n<p><strong>10.</strong> 直接运行examples中的arithmetic服务的server端程序：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">cd bin\n.&#x2F;arithmetic_server</code></pre>\n\n<p><strong>11.</strong> 远程服务端启动后，接着启动本地客户端程序。首先需要修改examples示例中client端代码中的远端服务器公网ip和port，这样才能正常连接。</p>\n<pre class=\"line-numbers language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\">int main() &#123;\n    EventLoop loop;\n    InetAddress addr(&quot;x.x.x.x&quot;, x); &#x2F;&#x2F; 修改远端服务器ip和port号\n    ArithmeticClientStub client(&amp;loop, addr);\n\n    client.setConnectionCallback([&amp;](const TcpConnectionPtr&amp; conn) &#123;\n        if (conn-&gt;disconnected()) &#123;\n            loop.quit();\n        &#125;\n        else &#123;\n            loop.runEvery(1s, [&amp;]&#123;\n                run(client);\n            &#125;);\n        &#125;\n    &#125;);\n    client.start();\n    loop.loop();\n&#125;</code></pre>\n\n<p><strong>12.</strong> 编译后运行arithmetic_client程序，即可看到rpc调用结果：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">20231104 05:31:11.225 [25879] [  INFO] connected - ArithmeticClientStub.hpp:24\n88+92&#x3D;180\n88-92&#x3D;-4\n88*92&#x3D;8096\n88&#x2F;92&#x3D;0.956522\n92+29&#x3D;121\n92*29&#x3D;2668\n92-29&#x3D;63\n92&#x2F;29&#x3D;3.17241\n51+92&#x3D;143\n51*92&#x3D;4692\n51-92&#x3D;-41\n51&#x2F;92&#x3D;0.554348</code></pre>","feature":true,"text":"Docker+阿里云服务器部署RPC服务1. ssh连接远端服务后，安装docker： apt install docker.io 2. 查找一个gcc13版本...","link":"","photos":[],"count_time":{"symbolsCount":"1.8k","symbolsTime":"2 mins."},"categories":[{"name":"项目记录","slug":"项目记录","count":4,"path":"api/categories/项目记录.json"}],"tags":[{"name":"项目记录","slug":"项目记录","count":4,"path":"api/tags/项目记录.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Docker-%E9%98%BF%E9%87%8C%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%83%A8%E7%BD%B2RPC%E6%9C%8D%E5%8A%A1\"><span class=\"toc-text\">Docker+阿里云服务器部署RPC服务</span></a></li></ol>","author":{"name":"月下叶子","slug":"blog-author","avatar":"https://cdn.statically.io/gh/moonlightleaf/pics@master/about/博客头像.1rm6v48dfu1s.jpg","link":"/","description":"日月东升西落，未曾负你我","socials":{"github":"https://github.com/moonlightleaf","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/leaf_in_the_moon","juejin":"","customs":{"leetcode":{"icon":"/svg/leetcode.svg","link":"https://leetcode.cn/u/zhong-v0/"}}}},"mapped":true,"hidden":false,"prev_post":{},"next_post":{"title":"Mudong-RPC : A JSON-RPC 2.0 framework implemented in C++20","uid":"abb2fc0e76166506324e12db59bf4947","slug":"Mudong-RPC","date":"2023-11-03T14:02:12.000Z","updated":"2023-11-04T03:42:08.868Z","comments":true,"path":"api/articles/Mudong-RPC.json","keywords":null,"cover":"https://cdn.statically.io/gh/moonlightleaf/pics@master/项目记录/mudong-rpc封面.tc1jyc7z0ts.jpg","text":"Mudong-RPC : A JSON-RPC 2.0 framework implemented in C++20代码仓库https://github.com...","link":"","photos":[],"count_time":{"symbolsCount":"3.5k","symbolsTime":"3 mins."},"categories":[{"name":"项目记录","slug":"项目记录","count":4,"path":"api/categories/项目记录.json"}],"tags":[{"name":"项目记录","slug":"项目记录","count":4,"path":"api/tags/项目记录.json"}],"author":{"name":"月下叶子","slug":"blog-author","avatar":"https://cdn.statically.io/gh/moonlightleaf/pics@master/about/博客头像.1rm6v48dfu1s.jpg","link":"/","description":"日月东升西落，未曾负你我","socials":{"github":"https://github.com/moonlightleaf","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/leaf_in_the_moon","juejin":"","customs":{"leetcode":{"icon":"/svg/leetcode.svg","link":"https://leetcode.cn/u/zhong-v0/"}}}},"feature":true}}