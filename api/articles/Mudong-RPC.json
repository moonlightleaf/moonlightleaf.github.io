{"title":"Mudong-RPC : A JSON-RPC 2.0 framework implemented in C++20","uid":"abb2fc0e76166506324e12db59bf4947","slug":"Mudong-RPC","date":"2023-11-03T14:02:12.000Z","updated":"2023-11-04T03:42:08.868Z","comments":true,"path":"api/articles/Mudong-RPC.json","keywords":null,"cover":"https://cdn.statically.io/gh/moonlightleaf/pics@master/项目记录/mudong-rpc封面.tc1jyc7z0ts.jpg","content":"<h1 id=\"Mudong-RPC-A-JSON-RPC-2-0-framework-implemented-in-C-20\"><a href=\"#Mudong-RPC-A-JSON-RPC-2-0-framework-implemented-in-C-20\" class=\"headerlink\" title=\"Mudong-RPC : A JSON-RPC 2.0 framework implemented in C++20\"></a>Mudong-RPC : A JSON-RPC 2.0 framework implemented in C++20</h1><h2 id=\"代码仓库\"><a href=\"#代码仓库\" class=\"headerlink\" title=\"代码仓库\"></a>代码仓库</h2><p><a href=\"https://github.com/moonlightleaf/mudong-rpc\">https://github.com/moonlightleaf/mudong-rpc</a></p>\n<h2 id=\"项目简介\"><a href=\"#项目简介\" class=\"headerlink\" title=\"项目简介\"></a>项目简介</h2><p>mudong-rpc是一款基于C++20开发的使用于Linux的RPC（Remote Procedure Call）框架，使用JSON数据格式作为序列化&#x2F;反序列化方案，实现了JSON-RPC 2.0协议。客户端支持异步RPC调用，也可以通过线程同步达到同步RPC调用的效果。服务端支持基于线程池的多线程RPC，以提高IO线程的响应速度和处理能力上限。服务采用service.method的命名方式，一个TCP端口可以对外提供多个service，每个service中可以含有多个method。</p>\n<h2 id=\"开发环境\"><a href=\"#开发环境\" class=\"headerlink\" title=\"开发环境\"></a>开发环境</h2><table>\n<thead>\n<tr>\n<th align=\"left\">Tool</th>\n<th align=\"center\">Version</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">Ubuntu(WSL2)</td>\n<td align=\"center\">20.04</td>\n</tr>\n<tr>\n<td align=\"left\">GCC</td>\n<td align=\"center\">13.1.0</td>\n</tr>\n<tr>\n<td align=\"left\">CMake</td>\n<td align=\"center\">3.23.0</td>\n</tr>\n<tr>\n<td align=\"left\">Git</td>\n<td align=\"center\">2.25.1</td>\n</tr>\n<tr>\n<td align=\"left\">clang-format</td>\n<td align=\"center\">10.0.0</td>\n</tr>\n</tbody></table>\n<h2 id=\"项目架构\"><a href=\"#项目架构\" class=\"headerlink\" title=\"项目架构\"></a>项目架构</h2><div style=\"text-align:center\">\n    <img src=\"https://cdn.statically.io/gh/moonlightleaf/pics@master/项目记录/rpc说明图白底.6zmiam02ggk0.webp\" alt=\"图片描述\" width=\"50%\" height=\"50%\">\n</div>\n\n<p>本项目编译生成的文件中包含有一个stub generator，可以根据spec.json中对一组rpc request和response的完整描述，自动生成client端和server端的stub代码。使用时client端（RPC调用方）只需包含生成的ClientStub头文件即可获取到相应的RPC服务，server端（RPC被调用方）除了要包含生成的ServiceStub头文件外，还需实现所提供的RPC服务的具体函数逻辑。</p>\n<p>Mudong-RPC中的JSON序列化与反序列化模块基于<a href=\"https://github.com/moonlightleaf/mudong-json\">Mudong-JSON</a>实现，网络模块基于<a href=\"https://github.com/moonlightleaf/mudong-ev\">Mudong-EV</a>实现。Mudong-JSON的测试依赖于googletest和benchmark，除此之外无其他依赖。</p>\n<h2 id=\"使用示例\"><a href=\"#使用示例\" class=\"headerlink\" title=\"使用示例\"></a>使用示例</h2><p>每个rpc服务都由一个spec.json文件来描述，arithmetic服务的spec.json文件如下，其中定义了method name、params list和返回值类型：</p>\n<pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\">&#123;\n  &quot;name&quot;: &quot;Arithmetic&quot;,\n  &quot;rpc&quot;: [\n    &#123;\n      &quot;name&quot;: &quot;Add&quot;,\n      &quot;params&quot;: &#123;&quot;lhs&quot;: 1.0, &quot;rhs&quot;: 1.0&#125;,\n      &quot;returns&quot;: 2.0\n    &#125;,\n    &#123;\n      &quot;name&quot;: &quot;Sub&quot;,\n      &quot;params&quot;: &#123;&quot;lhs&quot;: 1.0, &quot;rhs&quot;: 1.0&#125;,\n      &quot;returns&quot;: 0.0\n    &#125;,\n    &#123;\n      &quot;name&quot;: &quot;Mul&quot;,\n      &quot;params&quot;: &#123;&quot;lhs&quot;: 2.0, &quot;rhs&quot;: 3.0&#125;,\n      &quot;returns&quot;: 6.0\n    &#125;,\n    &#123;\n      &quot;name&quot;: &quot;Div&quot;,\n      &quot;params&quot;: &#123;&quot;lhs&quot;: 6.0, &quot;rhs&quot;: 2.0&#125;,\n      &quot;returns&quot;: 3.0\n    &#125;\n  ]\n&#125;</code></pre>\n\n<p>使用<code>mudong-rpc-stub</code>，输入spec.json，将生成client stub和service stub头文件。使用示例如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">mudong-rpc-stub -i spec.json -o -c -s</code></pre>\n\n<p><code>-i</code>参数表示输入json文件路径，<code>-o</code>表示以文件格式输出，<code>-c</code>和<code>-s</code>分别表示生成客户端和服务端的stub头文件，二者都缺省时表示二者都生成。</p>\n<p>对生成的代码format一下，方便阅读：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">clang-format -i ArithmeticClient.hpp ArithmeticService.hpp</code></pre>\n\n<p>项目代码仓库中的<strong>examples</strong>文件夹下，有<strong>arithmetic</strong>示例，给出了客户端和服务端的代码。若添加CMake选项<code>-DCMAKE_BUILD_EXAMPLES=1</code>，将会编译该示例。由于CMakeLists文件中以写明了若编译examples则自动执行stub generator程序生成客户端和服务端的stub，并将其作为编译依赖，直接可以得到客户端和服务端的可执行程序。</p>\n<p>首先启动arithmetic_server程序，服务端打印日志：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"># server log\n20231103 13:14:23.128 [ 8166] [  INFO] create TcpServer 0.0.0.0:9877 - TcpServer.cc:16\n20231103 13:14:23.130 [ 8166] [  INFO] TcpServer::start() 0.0.0.0:9877 with 1 eventLoop thread(s) - TcpServer.cc:62</code></pre>\n\n<p>随后启动arithmetic_client程序，服务端和客户端打印日志：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"># client log\n20231103 13:14:34.516 [ 8328] [  INFO] connected - ArithmeticClientStub.hpp:24\n\n# server log\n20231103 13:14:34.516 [ 8166] [ DEBUG] connection 127.0.0.1:48846 is [up] - BaseServer.cc:31</code></pre>\n\n<p>客户端连接成功后，将随机生成两个double值，并调用RPC的Add、Sub、Mul、Div服务进行加减乘除：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"># client log\n98+62&#x3D;160\n98-62&#x3D;36\n98*62&#x3D;6076\n98&#x2F;62&#x3D;1.58065\n54+59&#x3D;113\n54-59&#x3D;-5\n54*59&#x3D;3186\n54&#x2F;59&#x3D;0.915254\n36+39&#x3D;75\n36-39&#x3D;-3\n36*39&#x3D;1404\n36&#x2F;39&#x3D;0.923077</code></pre>\n\n<p>随后关闭客户端，服务端打印日志：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"># server log\n20231103 13:14:43.321 [ 8166] [ DEBUG] connection 127.0.0.1:48846 is [down] - BaseServer.cc:35</code></pre>\n\n<p>RPC调用完毕，返回成功。</p>\n<h2 id=\"编译-安装\"><a href=\"#编译-安装\" class=\"headerlink\" title=\"编译&amp;&amp;安装\"></a>编译&amp;&amp;安装</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ git clone https:&#x2F;&#x2F;github.com&#x2F;moonlightleaf&#x2F;mudong-rpc.git\n$ cd mudong-rpc\n$ git submodule update --init --recursive\n$ mkdir build &amp;&amp; cd build\n$ cmake [-DCMAKE_BUILD_EXAMPLES&#x3D;1] ..\n$ make install</code></pre>\n\n<p>可以通过选择是否添加<code>-DCMAKE_BUILD_EXAMPLES=1</code>选项，来决定是否要对<code>examples</code>目录下的文件进行编译。</p>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><ul>\n<li><a href=\"https://www.jsonrpc.org/specification\">JSON-RPC 2.0 Specification</a></li>\n<li><a href=\"https://github.com/jsonrpcx/json-rpc-cxx\">json-rpc-cxx</a></li>\n<li><a href=\"https://github.com/moonlightleaf/mudong-json\">Mudong-JSON</a>: A header-only JSON parser&#x2F;generator in C++17</li>\n<li><a href=\"https://github.com/moonlightleaf/mudong-ev\">Mudong-EV</a>: A multi-threaded network library in C++20</li>\n</ul>\n","feature":true,"text":"Mudong-RPC : A JSON-RPC 2.0 framework implemented in C++20代码仓库https://github.com...","link":"","photos":[],"count_time":{"symbolsCount":"3.5k","symbolsTime":"3 mins."},"categories":[{"name":"项目记录","slug":"项目记录","count":4,"path":"api/categories/项目记录.json"}],"tags":[{"name":"项目记录","slug":"项目记录","count":4,"path":"api/tags/项目记录.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Mudong-RPC-A-JSON-RPC-2-0-framework-implemented-in-C-20\"><span class=\"toc-text\">Mudong-RPC : A JSON-RPC 2.0 framework implemented in C++20</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BB%A3%E7%A0%81%E4%BB%93%E5%BA%93\"><span class=\"toc-text\">代码仓库</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%A1%B9%E7%9B%AE%E7%AE%80%E4%BB%8B\"><span class=\"toc-text\">项目简介</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83\"><span class=\"toc-text\">开发环境</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%A1%B9%E7%9B%AE%E6%9E%B6%E6%9E%84\"><span class=\"toc-text\">项目架构</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BD%BF%E7%94%A8%E7%A4%BA%E4%BE%8B\"><span class=\"toc-text\">使用示例</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%BC%96%E8%AF%91-%E5%AE%89%E8%A3%85\"><span class=\"toc-text\">编译&amp;&amp;安装</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8F%82%E8%80%83\"><span class=\"toc-text\">参考</span></a></li></ol></li></ol>","author":{"name":"月下叶子","slug":"blog-author","avatar":"https://cdn.statically.io/gh/moonlightleaf/pics@master/about/博客头像.1rm6v48dfu1s.jpg","link":"/","description":"日月东升西落，未曾负你我","socials":{"github":"https://github.com/moonlightleaf","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/leaf_in_the_moon","juejin":"","customs":{"leetcode":{"icon":"/svg/leetcode.svg","link":"https://leetcode.cn/u/zhong-v0/"}}}},"mapped":true,"hidden":false,"prev_post":{"title":"Docker+阿里云服务器部署RPC服务","uid":"8943ab2addc2f45e81298f247910b5c2","slug":"阿里云部署","date":"2023-11-04T05:53:12.000Z","updated":"2023-11-04T05:54:02.165Z","comments":true,"path":"api/articles/阿里云部署.json","keywords":null,"cover":"https://cdn.statically.io/gh/moonlightleaf/pics@master/项目记录/docker-facebook.787s7ktssq80.webp","text":"Docker+阿里云服务器部署RPC服务 ssh连接远端服务后，安装docker： apt install docker.io 查找一个gcc13版本的镜像： ...","link":"","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[{"name":"项目记录","slug":"项目记录","count":4,"path":"api/categories/项目记录.json"}],"tags":[{"name":"项目记录","slug":"项目记录","count":4,"path":"api/tags/项目记录.json"}],"author":{"name":"月下叶子","slug":"blog-author","avatar":"https://cdn.statically.io/gh/moonlightleaf/pics@master/about/博客头像.1rm6v48dfu1s.jpg","link":"/","description":"日月东升西落，未曾负你我","socials":{"github":"https://github.com/moonlightleaf","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/leaf_in_the_moon","juejin":"","customs":{"leetcode":{"icon":"/svg/leetcode.svg","link":"https://leetcode.cn/u/zhong-v0/"}}}},"feature":true},"next_post":{"title":"Mudong-EV : A multi-threaded network library in C++20","uid":"70154bdd37d99837a150483aa899c737","slug":"Mudong-EV","date":"2023-10-07T14:29:12.000Z","updated":"2023-11-03T16:51:08.570Z","comments":true,"path":"api/articles/Mudong-EV.json","keywords":null,"cover":"https://cdn.statically.io/gh/moonlightleaf/pics@master/项目记录/Mudong-ev封面.39c4ersyvmm0.webp","text":"Mudong-EV : A multi-threaded network library in C++20代码仓库https://github.com/moon...","link":"","photos":[],"count_time":{"symbolsCount":"3.2k","symbolsTime":"3 mins."},"categories":[{"name":"项目记录","slug":"项目记录","count":4,"path":"api/categories/项目记录.json"}],"tags":[{"name":"项目记录","slug":"项目记录","count":4,"path":"api/tags/项目记录.json"}],"author":{"name":"月下叶子","slug":"blog-author","avatar":"https://cdn.statically.io/gh/moonlightleaf/pics@master/about/博客头像.1rm6v48dfu1s.jpg","link":"/","description":"日月东升西落，未曾负你我","socials":{"github":"https://github.com/moonlightleaf","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/leaf_in_the_moon","juejin":"","customs":{"leetcode":{"icon":"/svg/leetcode.svg","link":"https://leetcode.cn/u/zhong-v0/"}}}},"feature":true}}