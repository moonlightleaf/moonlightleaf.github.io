{"title":"《SQL必知必会5th》摘要","uid":"819d35bc6064305bb27f20cd57190fee","slug":"SQL-SQL必知必会学习摘要","date":"2023-09-10T07:48:12.000Z","updated":"2023-09-28T11:44:48.199Z","comments":true,"path":"api/articles/SQL-SQL必知必会学习摘要.json","keywords":null,"cover":"https://cdn.staticaly.io/gh/moonlightleaf/pics@master/随笔配图/206ad3cac8878c9ee58e4d371a504e44ea05941e.31g1xdu88og0.png","content":"<h2 id=\"前提\"><a href=\"#前提\" class=\"headerlink\" title=\"前提\"></a>前提</h2><p>学习环境针对<strong>mysql</strong>搭建，因此对于书中给出的针对mysql、sql server、Oracle Live SQL等不同具体DBMS的语法，只摘要其描述<strong>mysql</strong>的部分。</p>\n<h2 id=\"第1课-了解SQL\"><a href=\"#第1课-了解SQL\" class=\"headerlink\" title=\"第1课 了解SQL\"></a>第1课 了解SQL</h2><ol>\n<li>数据库（database）由表（table）组成，同一数据库中，每张表的表名是唯一的。表的每一列代表一个不同的属性，每条数据按照行的方式存储。</li>\n<li>每一行中，都应该有一列或几列可以唯一标识自己，标志位<strong>主键</strong>。任意两行都不具有相同的主键值；每一行都必须具有一个主键值，且不允许空值NULL；主键列中的值不可修改或更新；主键值不能重用，某行被删除后，其主键不能赋给以后的新行。</li>\n</ol>\n<h2 id=\"第2课-检索数据\"><a href=\"#第2课-检索数据\" class=\"headerlink\" title=\"第2课 检索数据\"></a>第2课 检索数据</h2><pre class=\"line-numbers language-SQL\" data-language=\"SQL\"><code class=\"language-SQL\">SELECT prod_name\nFROM products; -- 检索单个列\n\nSELECT prod_id, prod_name, prod_price\nFROM products; -- 检索多个列\n\nSELECT *\nFROM products; -- 检索所有列，*是通配符\n\nSELECT DISTINCT vend_id\nFROM products; -- 检索不同的值（去重）\n\nSELECT DISTINCT vend_id, prod_price\nFROM products; -- 检索不同的列组合值 (1,1)(1,2)(2,1)(2,2)都会被检索出来\n\nSELECT prod_name\nFROM products\nLIMIT 5; -- 返回不超过5行数据\n\nSELECT prod_name\nFROM products\nLIMIT 5 OFFSET 3; -- 返回从行索引3起的5行数据，行索引从0开始计数\n\nSELECT prod_name\nFROM products\nLIMIT 3, 5; -- 简写，含义同上</code></pre>\n\n<h2 id=\"第3课-排序检索数据\"><a href=\"#第3课-排序检索数据\" class=\"headerlink\" title=\"第3课 排序检索数据\"></a>第3课 排序检索数据</h2><pre class=\"line-numbers language-SQL\" data-language=\"SQL\"><code class=\"language-SQL\">SELECT prod_name\nFROM products\nORDER BY prod_name; -- 按序索引，ORDER BY必须为SELECT的最后一个子句\n\nSELECT prod_id, prod_price, prod_name\nFROM products\nORDER BY prod_price, prod_name; -- 按多个列顺序排序\n\nSELECT prod_id, prod_price, prod_name\nFROM products\nORDER BY 2, 3; -- 按列的相对位置排序\n\nSELECT prod_name\nFROM products\nORDER BY prod_name DESC; -- 逆序排列，Descending\n\nSELECT prod_name\nFROM products\nORDER BY prod_name DESC, prod_price; -- DESC只作用与它前面一个列名</code></pre>\n\n<h2 id=\"第4课-过滤数据\"><a href=\"#第4课-过滤数据\" class=\"headerlink\" title=\"第4课 过滤数据\"></a>第4课 过滤数据</h2><pre class=\"line-numbers language-SQL\" data-language=\"SQL\"><code class=\"language-SQL\">SELECT prod_name, prod_price\nFROM products\nWHERE prod_price&gt;10; -- 过滤大于10的值\n\nSELECT prod_name, prod_price\nFROM products\nWHERE prod_price BETWEEN 5 AND 10; -- 筛选5到10之间的\n\nSELECT vend_id, prod_name\nFROM products\nWHERE prod_name &lt;&gt; &#39;Safe&#39;; -- 选择prod_name不为Safe的值，字符串要加引号\n\nSELECT cust_name\nFROM customers\nWHERE cust_email IS NULL; -- 选择email为null的值</code></pre>\n\n<table>\n<thead>\n<tr>\n<th align=\"center\">操作符</th>\n<th align=\"left\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">&#x3D;</td>\n<td align=\"left\">等于</td>\n</tr>\n<tr>\n<td align=\"center\">!&#x3D;</td>\n<td align=\"left\">不等于</td>\n</tr>\n<tr>\n<td align=\"center\">&lt;&gt;</td>\n<td align=\"left\">不等于</td>\n</tr>\n<tr>\n<td align=\"center\">&lt;</td>\n<td align=\"left\">小于</td>\n</tr>\n<tr>\n<td align=\"center\">&lt;&#x3D;</td>\n<td align=\"left\">小于等于</td>\n</tr>\n<tr>\n<td align=\"center\">&gt;</td>\n<td align=\"left\">大于</td>\n</tr>\n<tr>\n<td align=\"center\">&gt;&#x3D;</td>\n<td align=\"left\">大于等于</td>\n</tr>\n<tr>\n<td align=\"center\">BETWEEN v1 AND v2</td>\n<td align=\"left\">在指定的两个值之间</td>\n</tr>\n<tr>\n<td align=\"center\">IS NULL</td>\n<td align=\"left\">为NULL值</td>\n</tr>\n</tbody></table>\n<h2 id=\"第5课-高级数据过滤\"><a href=\"#第5课-高级数据过滤\" class=\"headerlink\" title=\"第5课 高级数据过滤\"></a>第5课 高级数据过滤</h2><pre class=\"line-numbers language-SQL\" data-language=\"SQL\"><code class=\"language-SQL\">SELECT prod_name, prod_price\nFROM products\nWHERE (vend_id &#x3D; 1001 OR vend_id &#x3D; 1003) AND prod_price &gt;&#x3D; 10; -- 使用AND、OR\n\nSELECT prod_name, prod_price\nFROM products\nWHERE vend_id IN (1001, 1003)\nORDER BY prod_name; -- 使用IN，查找在集合内的数据\n\nSELECT prod_name\nFROM products\nWHERE NOT vend_id &#x3D; 1001 -- 使用NOT，等价于WHERE vend_id !&#x3D; 1001\nORDER BY prod_name;</code></pre>\n\n<h2 id=\"第6课-用通配符进行过滤\"><a href=\"#第6课-用通配符进行过滤\" class=\"headerlink\" title=\"第6课 用通配符进行过滤\"></a>第6课 用通配符进行过滤</h2><p><strong>%</strong> 作为通配符，可以匹配任意数量的任意字符，搭配<strong>LIKE</strong>一起使用。</p>\n<pre class=\"line-numbers language-SQL\" data-language=\"SQL\"><code class=\"language-SQL\">SELECT prod_desc\nFROM products\nWHERE prod_desc LIKE &#39;%si%&#39;;</code></pre>\n\n<p>以下为输出，所有包含<strong>si</strong>子串的字符数据都被罗列出来：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">+---------------------------------------+\n| prod_desc                             |\n+---------------------------------------+\n| JetPack 1000, intended for single use |\n| Sling, one size fits all              |\n| TNT, red, single stick                |\n+---------------------------------------+</code></pre>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><pre class=\"line-numbers language-WHERE\" data-language=\"WHERE\"><div class=\"caption\"><span>prod_name LIKE '%'```不会匹配产品名称为NULL的行，NULL无法被通配</span></div><code class=\"language-WHERE\">\n对于末尾的空格，可以在匹配子串末尾加上 **%** 进行通配，也可以用函数去除末尾空格。\n\n“**_**” 只能通配一个字符，注意末尾空格，额外加上 **%** 进行处理。\n\n&#96;&#96;&#96;SQL\nSELECT prod_name\nFROM products\nWHERE prod_name LIKE &#39;JetPack _000%&#39;;</code></pre></blockquote>\n<p>输出为：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">+--------------+\n| prod_name    |\n+--------------+\n| JetPack 1000 |\n| JetPack 2000 |\n+--------------+</code></pre>\n\n<p>通配符使用需注意：</p>\n<ul>\n<li>不要过度使用通配符。如果其他操作符能达到相同的目的，优先使用其他操作符。</li>\n<li>尽量不要把通配符用在搜索模式的开始处，否则搜索会相当耗时。</li>\n</ul>\n<h2 id=\"第7课-创建计算字段\"><a href=\"#第7课-创建计算字段\" class=\"headerlink\" title=\"第7课 创建计算字段\"></a>第7课 创建计算字段</h2><p>可将数据库中的数据稍作处理再返回给客户端程序，在计算字段的语境下，一般用字段来代指列。</p>\n<pre class=\"line-numbers language-SQL\" data-language=\"SQL\"><code class=\"language-SQL\">SELECT Concat(vend_name, &#39; (&#39;, vend_country, &#39; )&#39;)\nFROM vendors; -- 字符串拼接，输出格式 vend_name (vend_country)\n\nSELECT Concat(RTRIM(vend_name), &#39; (&#39;, RTRIM(vend_country), &#39; )&#39;)\nFROM vendors; -- RTRIM(field) 去除右端空格，同理有LTRIM去左端和TRIM去两端\n\nSELECT Concat(RTRIM(vend_name), &#39; (&#39;, RTRIM(vend_country), &#39; )&#39;)\nAS vend_title\nFROM vendors; -- 使用AS给字段或值起别名，方便客户端检索</code></pre>\n\n<p>执行算术计算</p>\n<pre class=\"line-numbers language-SQL\" data-language=\"SQL\"><code class=\"language-SQL\">SELECT prod_id, \n       quantity,\n       item_price,\n       quantity*item_price AS expanded_price\nFROM orderitems;</code></pre>\n\n<p>计算数量乘以单价，输出为：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">+---------+----------+------------+----------------+\n| prod_id | quantity | item_price | expanded_price |\n+---------+----------+------------+----------------+\n| ANV01   |       10 |       5.99 |          59.90 |\n| ANV02   |        3 |       9.99 |          29.97 |\n| TNT2    |        5 |      10.00 |          50.00 |\n| FB      |        1 |      10.00 |          10.00 |\n| JP2000  |        1 |      55.00 |          55.00 |\n| TNT2    |      100 |      10.00 |        1000.00 |\n| FC      |       50 |       2.50 |         125.00 |\n| FB      |        1 |      10.00 |          10.00 |\n| OL1     |        1 |       8.99 |           8.99 |\n| SLING   |        1 |       4.49 |           4.49 |\n| ANV03   |        1 |      14.99 |          14.99 |\n+---------+----------+------------+----------------+</code></pre>\n\n<p>运算符支持 <strong>+ - * &#x2F;</strong> 四种。</p>\n<h2 id=\"第8课-使用函数处理数据\"><a href=\"#第8课-使用函数处理数据\" class=\"headerlink\" title=\"第8课 使用函数处理数据\"></a>第8课 使用函数处理数据</h2><table>\n<thead>\n<tr>\n<th align=\"left\">文本处理函数</th>\n<th align=\"left\">功能</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">LEFT()</td>\n<td align=\"left\">返回字符串左边的字符</td>\n</tr>\n<tr>\n<td align=\"left\">LENGTH()</td>\n<td align=\"left\">返回字符串长度</td>\n</tr>\n<tr>\n<td align=\"left\">LOWER()</td>\n<td align=\"left\">将字符串转换为小写</td>\n</tr>\n<tr>\n<td align=\"left\">LTRIM()</td>\n<td align=\"left\">去掉字符串左边的空格</td>\n</tr>\n<tr>\n<td align=\"left\">RIGHT()</td>\n<td align=\"left\">返回字符串右边的字符</td>\n</tr>\n<tr>\n<td align=\"left\">RTRIM()</td>\n<td align=\"left\">去掉字符串右边的空格</td>\n</tr>\n<tr>\n<td align=\"left\">SUBSTRING()</td>\n<td align=\"left\">提取字符串的组成部分</td>\n</tr>\n<tr>\n<td align=\"left\">SOUNDEX()</td>\n<td align=\"left\">返回字符串的SOUNDEX值</td>\n</tr>\n<tr>\n<td align=\"left\">UPPER()</td>\n<td align=\"left\">将字符串转换为大写</td>\n</tr>\n</tbody></table>\n<p>以orders表为例演示用法：</p>\n<pre class=\"line-numbers language-SQL\" data-language=\"SQL\"><code class=\"language-SQL\">+-----------+---------------------+---------+\n| order_num | order_date          | cust_id |\n+-----------+---------------------+---------+\n|     20005 | 2005-09-01 00:00:00 |   10001 |\n|     20006 | 2005-09-12 00:00:00 |   10003 |\n|     20007 | 2005-09-30 00:00:00 |   10004 |\n|     20008 | 2005-10-03 00:00:00 |   10005 |\n|     20009 | 2005-10-08 00:00:00 |   10001 |\n+-----------+---------------------+---------+\n\nSELECT LEFT(order_date, 10) -- RIGHT()从右端开始，同理\nFROM orders \nWHERE order_num &#x3D; 20009;\n+----------------------+\n| LEFT(order_date, 10) |\n+----------------------+\n| 2005-10-08           |\n+----------------------+\n\nSELECT LENGTH(order_date) \nfrom orders; -- 可以对字段使用，也可以对单一字符串使用\n+--------------------+\n| LENGTH(order_date) |\n+--------------------+\n|                 19 |\n|                 19 |\n|                 19 |\n|                 19 |\n|                 19 |\n+--------------------+\n\nSELECT UPPER(&#39;Hello world&#39;); -- LOWER()同理\n+----------------------+\n| UPPER(&#39;Hello world&#39;) |\n+----------------------+\n| HELLO WORLD          |\n+----------------------+\n\nSELECT SUBSTRING(&#39;hello world&#39;, 1, 5); -- SUBSTRING(str, start, length)，下标从1开始\n+--------------------------------+\n| SUBSTRING(&#39;hello world&#39;, 1, 5) |\n+--------------------------------+\n| hello                          |\n+--------------------------------+\n\nSELECT cust_name, cust_contack\nFROM customers\nWHERE SOUNDEX(cust_contact) &#x3D; SOUNDEX(&#39;Michael Green&#39;); -- &#39;Michelle Green&#39;会被匹配上，发音相似</code></pre>\n\n<table>\n<thead>\n<tr>\n<th align=\"left\">日期和时间处理函数</th>\n<th align=\"left\">功能</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">YERA()</td>\n<td align=\"left\">从日期中提取年</td>\n</tr>\n<tr>\n<td align=\"left\">MONTH()</td>\n<td align=\"left\">从日期中提取月</td>\n</tr>\n<tr>\n<td align=\"left\">DAY()</td>\n<td align=\"left\">从日期中提取日</td>\n</tr>\n</tbody></table>\n<pre class=\"line-numbers language-SQL\" data-language=\"SQL\"><code class=\"language-SQL\">SELECT order_num, cust_id\nFROM orders\nWHERE MONTH(order_date) &#x3D; 9;\n+-----------+---------+\n| order_num | cust_id |\n+-----------+---------+\n|     20005 |   10001 |\n|     20006 |   10003 |\n|     20007 |   10004 |\n+-----------+---------+</code></pre>\n\n<table>\n<thead>\n<tr>\n<th align=\"left\">数值处理函数</th>\n<th align=\"left\">功能</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">ABS()</td>\n<td align=\"left\">返回一个数的绝对值</td>\n</tr>\n<tr>\n<td align=\"left\">COS()</td>\n<td align=\"left\">返回一个角度的余弦</td>\n</tr>\n<tr>\n<td align=\"left\">EXP()</td>\n<td align=\"left\">返回一个数的指数值</td>\n</tr>\n<tr>\n<td align=\"left\">PI()</td>\n<td align=\"left\">返回圆周率的值</td>\n</tr>\n<tr>\n<td align=\"left\">SIN()</td>\n<td align=\"left\">返回一个角度的正弦</td>\n</tr>\n<tr>\n<td align=\"left\">SQRT()</td>\n<td align=\"left\">返回一个数的平方根</td>\n</tr>\n<tr>\n<td align=\"left\">TAN()</td>\n<td align=\"left\">返回一个角度的正切</td>\n</tr>\n</tbody></table>\n<h2 id=\"第9课-汇总数据\"><a href=\"#第9课-汇总数据\" class=\"headerlink\" title=\"第9课 汇总数据\"></a>第9课 汇总数据</h2><table>\n<thead>\n<tr>\n<th align=\"left\">聚集函数</th>\n<th align=\"left\">功能</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">AVG()</td>\n<td align=\"left\">返回某列的平均值</td>\n</tr>\n<tr>\n<td align=\"left\">COUNT()</td>\n<td align=\"left\">返回某列的行数</td>\n</tr>\n<tr>\n<td align=\"left\">MAX()</td>\n<td align=\"left\">返回某列的最大值</td>\n</tr>\n<tr>\n<td align=\"left\">MIN()</td>\n<td align=\"left\">返回某列的最小值</td>\n</tr>\n<tr>\n<td align=\"left\">SUM()</td>\n<td align=\"left\">返回某列值之和</td>\n</tr>\n</tbody></table>\n<p>COUNT(*)会算上NULL，COUNT(field)则忽略NULL</p>\n<h2 id=\"第10课-分组数据\"><a href=\"#第10课-分组数据\" class=\"headerlink\" title=\"第10课 分组数据\"></a>第10课 分组数据</h2>","feature":true,"text":"前提学习环境针对mysql搭建，因此对于书中给出的针对mysql、sql server、Oracle Live SQL等不同具体DBMS的语法，只摘要其描述my...","link":"","photos":[],"count_time":{"symbolsCount":"6.7k","symbolsTime":"6 mins."},"categories":[{"name":"SQL","slug":"SQL","count":2,"path":"api/categories/SQL.json"}],"tags":[{"name":"SQL","slug":"SQL","count":2,"path":"api/tags/SQL.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%89%8D%E6%8F%90\"><span class=\"toc-text\">前提</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%AC%AC1%E8%AF%BE-%E4%BA%86%E8%A7%A3SQL\"><span class=\"toc-text\">第1课 了解SQL</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%AC%AC2%E8%AF%BE-%E6%A3%80%E7%B4%A2%E6%95%B0%E6%8D%AE\"><span class=\"toc-text\">第2课 检索数据</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%AC%AC3%E8%AF%BE-%E6%8E%92%E5%BA%8F%E6%A3%80%E7%B4%A2%E6%95%B0%E6%8D%AE\"><span class=\"toc-text\">第3课 排序检索数据</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%AC%AC4%E8%AF%BE-%E8%BF%87%E6%BB%A4%E6%95%B0%E6%8D%AE\"><span class=\"toc-text\">第4课 过滤数据</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%AC%AC5%E8%AF%BE-%E9%AB%98%E7%BA%A7%E6%95%B0%E6%8D%AE%E8%BF%87%E6%BB%A4\"><span class=\"toc-text\">第5课 高级数据过滤</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%AC%AC6%E8%AF%BE-%E7%94%A8%E9%80%9A%E9%85%8D%E7%AC%A6%E8%BF%9B%E8%A1%8C%E8%BF%87%E6%BB%A4\"><span class=\"toc-text\">第6课 用通配符进行过滤</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%AC%AC7%E8%AF%BE-%E5%88%9B%E5%BB%BA%E8%AE%A1%E7%AE%97%E5%AD%97%E6%AE%B5\"><span class=\"toc-text\">第7课 创建计算字段</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%AC%AC8%E8%AF%BE-%E4%BD%BF%E7%94%A8%E5%87%BD%E6%95%B0%E5%A4%84%E7%90%86%E6%95%B0%E6%8D%AE\"><span class=\"toc-text\">第8课 使用函数处理数据</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%AC%AC9%E8%AF%BE-%E6%B1%87%E6%80%BB%E6%95%B0%E6%8D%AE\"><span class=\"toc-text\">第9课 汇总数据</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%AC%AC10%E8%AF%BE-%E5%88%86%E7%BB%84%E6%95%B0%E6%8D%AE\"><span class=\"toc-text\">第10课 分组数据</span></a></li></ol>","author":{"name":"月下叶子","slug":"blog-author","avatar":"https://cdn.staticaly.com/gh/moonlightleaf/pics@master/about/博客头像.1rm6v48dfu1s.jpg","link":"/","description":"日月东升西落，未曾负你我","socials":{"github":"https://github.com/moonlightleaf","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/leaf_in_the_moon","juejin":"","customs":{"leetcode":{"icon":"/svg/leetcode.svg","link":"https://leetcode.cn/u/zhong-v0/"}}}},"mapped":true,"hidden":false,"prev_post":{},"next_post":{"title":"《SQL必知必会5th》学习环境搭建","uid":"f800969b8808a99b4d1f639a37a744e3","slug":"SQL-SQL必知必会学习环境搭建","date":"2023-09-10T07:48:12.000Z","updated":"2023-09-28T11:44:48.200Z","comments":true,"path":"api/articles/SQL-SQL必知必会学习环境搭建.json","keywords":null,"cover":"https://cdn.staticaly.io/gh/moonlightleaf/pics@master/随笔配图/206ad3cac8878c9ee58e4d371a504e44ea05941e.31g1xdu88og0.png","text":"学习环境搭建学习SQL过程中难免要多写多练，书中刚好也提供了用来学习的数据库，因此首先进行学习环境的搭建。为方便起见将会使用Docker，需提前安装，教程很多不...","link":"","photos":[],"count_time":{"symbolsCount":"1k","symbolsTime":"1 mins."},"categories":[{"name":"SQL","slug":"SQL","count":2,"path":"api/categories/SQL.json"}],"tags":[{"name":"SQL","slug":"SQL","count":2,"path":"api/tags/SQL.json"}],"author":{"name":"月下叶子","slug":"blog-author","avatar":"https://cdn.staticaly.com/gh/moonlightleaf/pics@master/about/博客头像.1rm6v48dfu1s.jpg","link":"/","description":"日月东升西落，未曾负你我","socials":{"github":"https://github.com/moonlightleaf","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/leaf_in_the_moon","juejin":"","customs":{"leetcode":{"icon":"/svg/leetcode.svg","link":"https://leetcode.cn/u/zhong-v0/"}}}},"feature":true}}