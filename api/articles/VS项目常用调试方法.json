{"title":"VS项目常用调试方法","uid":"20a581299d5041a583789bd3076d92ff","slug":"VS项目常用调试方法","date":"2022-10-30T16:13:20.000Z","updated":"2023-09-28T12:10:19.504Z","comments":true,"path":"api/articles/VS项目常用调试方法.json","keywords":null,"cover":"https://cdn.statically.io/gh/moonlightleaf/pics@master/Server配图/微信图片_20221031184222.3fu2m6i2rzi0.jpg","content":"<!-- toc --> \n\n<h2 id=\"1-打印数据\"><a href=\"#1-打印数据\" class=\"headerlink\" title=\"1.打印数据\"></a>1.打印数据</h2><pre class=\"line-numbers language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\">int a &#x3D; 0;\nfor (int i &#x3D; 1; i &lt;&#x3D; 10; ++i) &#123;\n    a +&#x3D; i;\n#ifdef _DEBUG\n    if (i &#x3D;&#x3D; 5) printf(&quot;debug: i &#x3D;&#x3D; 5, a &#x3D; %d\\n&quot;, a);\n#endif &#x2F;&#x2F;DEBUG\n&#125;\nprintf(&quot;a &#x3D; %d\\n&quot;, a);</code></pre>\n<p>在VC里，debug模式的标识宏为_DEBUG, 在debug模式下该宏被定义，则打印输出i&#x3D;5时的调试信息；在release模式下则不会执行调试打印语句。注意，要尽可能详细地写出调试信息，与一般打印输出区分开。</p>\n<h2 id=\"2-普通断点\"><a href=\"#2-普通断点\" class=\"headerlink\" title=\"2.普通断点\"></a>2.普通断点</h2><p><img src=\"https://cdn.statically.io/gh/moonlightleaf/pics@master/Server%E9%85%8D%E5%9B%BE/QQ%E6%88%AA%E5%9B%BE20221031211128.5h1d2t4s5m80.png\"></p>\n<p>在指定位置插入断点，代码执行至此便会暂停。</p>\n<h2 id=\"3-条件断点\"><a href=\"#3-条件断点\" class=\"headerlink\" title=\"3.条件断点\"></a>3.条件断点</h2><p>在待调试代码行，右键，插入条件断点。当程序运行至此处并且判断条件为真时，触发断点。</p>\n<p><img src=\"https://cdn.statically.io/gh/moonlightleaf/pics@master/Server%E9%85%8D%E5%9B%BE/QQ%E6%88%AA%E5%9B%BE20221031211226.6zazjwtdt7w0.png\"></p>\n<p><img src=\"https://cdn.statically.io/gh/moonlightleaf/pics@master/Server%E9%85%8D%E5%9B%BE/QQ%E6%88%AA%E5%9B%BE20221031211740.3v1c2y0n8pg0.png\"></p>\n<h2 id=\"4-条件追踪\"><a href=\"#4-条件追踪\" class=\"headerlink\" title=\"4.条件追踪\"></a>4.条件追踪</h2><p>我们可能想要在触发条件断点时，打印输出一些信息来帮助我们了解程序的运行状况，那么我们可以勾选操作，并添加一些代码，从而将消息记录输出到窗口。假如我们在操作中添加如下代码：</p>\n<pre class=\"line-numbers language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\">debug: a &#x3D; &#123;a&#125;</code></pre>\n\n<p>则会打印输出 debug: a &#x3D; 10。需要注意，当想输出某变量值时，需要用{}来进行捕获，别的字符将直接以字符格式输出。在操作中，还有一些VS为我们提供的变量可以使用，例如打印PID、函数名、堆栈等，前缀一如既往的是$，如图：</p>\n<p><img src=\"https://cdn.statically.io/gh/moonlightleaf/pics@master/Server%E9%85%8D%E5%9B%BE/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20221031212829.79f3vaaezb00.png\"></p>\n<p>假如我们在操作中添加如下代码：</p>\n<pre class=\"line-numbers language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\">debug: $PNAME | $TNAME | $FUNCTION | a &#x3D; &#123;a&#125;</code></pre>\n\n<p>则会打印输出如下：</p>\n<pre class=\"line-numbers language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\">debug: D:\\VSProjects\\ServerProject\\bin\\x64\\Debug\\HelloWorld.exe | 主线程 | main(void) | a &#x3D; 10</code></pre>\n\n<h2 id=\"5-单步调试\"><a href=\"#5-单步调试\" class=\"headerlink\" title=\"5.单步调试\"></a>5.单步调试</h2><p>多打几个断点，让整体程序分段执行，触发断点时，鼠标悬停至变量上，可显示该变量当前的值。</p>\n<p>若想跳转至某个函数内部进行逐步分析，则需要使用“逐语句”调试，如果用“逐过程”，则不会进入函数内部调试。进入了函数之后如果想跳出，可以点“跳出”。</p>\n<h2 id=\"6-添加监视\"><a href=\"#6-添加监视\" class=\"headerlink\" title=\"6.添加监视\"></a>6.添加监视</h2><p>当有多个变量需要调试测值的时候，鼠标悬停看值肯定会不方便，因此可以右键点击变量，添加监视，监视窗口如下图：</p>\n<p><img src=\"https://cdn.statically.io/gh/moonlightleaf/pics@master/Server%E9%85%8D%E5%9B%BE/QQ%E6%88%AA%E5%9B%BE20221031215837.c1cu0su1780.png\"></p>\n<pre class=\"line-numbers language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\">int arr[] &#x3D; &#123; 1,3,5,7,9 &#125;;\nint* pArr &#x3D; arr;</code></pre>\n\n<p>对于上述两行代码，若直接对arr和pArr添加监视，arr可正常被作为数组监视，而pArr则被认为是单个int变量，指向的值只有1。若想正确的监视pArr，需要右键点击pArr-&gt;快速监视，按如下输入，并点击重新计算即可：</p>\n<p><img src=\"https://cdn.statically.io/gh/moonlightleaf/pics@master/Server%E9%85%8D%E5%9B%BE/QQ%E6%88%AA%E5%9B%BE20221031220202.2ylqza1xoy80.png\"></p>\n","feature":true,"text":" 1.打印数据int a &#x3D; 0; for (int i &#x3D; 1; i &lt;&#x3D; 10; ++i) &#123; a +&#x3...","link":"","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[{"name":"VS","slug":"VS","count":2,"path":"api/categories/VS.json"}],"tags":[{"name":"VS","slug":"VS","count":2,"path":"api/tags/VS.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-%E6%89%93%E5%8D%B0%E6%95%B0%E6%8D%AE\"><span class=\"toc-text\">1.打印数据</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-%E6%99%AE%E9%80%9A%E6%96%AD%E7%82%B9\"><span class=\"toc-text\">2.普通断点</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-%E6%9D%A1%E4%BB%B6%E6%96%AD%E7%82%B9\"><span class=\"toc-text\">3.条件断点</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-%E6%9D%A1%E4%BB%B6%E8%BF%BD%E8%B8%AA\"><span class=\"toc-text\">4.条件追踪</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#5-%E5%8D%95%E6%AD%A5%E8%B0%83%E8%AF%95\"><span class=\"toc-text\">5.单步调试</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#6-%E6%B7%BB%E5%8A%A0%E7%9B%91%E8%A7%86\"><span class=\"toc-text\">6.添加监视</span></a></li></ol>","author":{"name":"月下叶子","slug":"blog-author","avatar":"https://cdn.statically.io/gh/moonlightleaf/pics@master/about/博客头像.1rm6v48dfu1s.jpg","link":"/","description":"日月东升西落，未曾负你我","socials":{"github":"https://github.com/moonlightleaf","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/leaf_in_the_moon","juejin":"","customs":{"leetcode":{"icon":"/svg/leetcode.svg","link":"https://leetcode.cn/u/zhong-v0/"}}}},"mapped":true,"hidden":false,"prev_post":{"title":"VS项目文件层级管理方案","uid":"f90be0cb91d38e221fc75922bd5a6542","slug":"VS项目文件层级管理方案","date":"2022-10-30T16:13:20.000Z","updated":"2023-09-28T12:10:19.504Z","comments":true,"path":"api/articles/VS项目文件层级管理方案.json","keywords":null,"cover":"https://cdn.statically.io/gh/moonlightleaf/pics@master/Server配图/微信图片_20221031184222.3fu2m6i2rzi0.jpg","text":" 1.新建项目文件夹，以项目名称来命名例如，新建项目文件夹，命名为“MyServer”。 2.在MyServer文件夹下，创建新的控制台项目“HelloCpp”...","link":"","photos":[],"count_time":{"symbolsCount":706,"symbolsTime":"1 mins."},"categories":[{"name":"VS","slug":"VS","count":2,"path":"api/categories/VS.json"}],"tags":[{"name":"VS","slug":"VS","count":2,"path":"api/tags/VS.json"}],"author":{"name":"月下叶子","slug":"blog-author","avatar":"https://cdn.statically.io/gh/moonlightleaf/pics@master/about/博客头像.1rm6v48dfu1s.jpg","link":"/","description":"日月东升西落，未曾负你我","socials":{"github":"https://github.com/moonlightleaf","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/leaf_in_the_moon","juejin":"","customs":{"leetcode":{"icon":"/svg/leetcode.svg","link":"https://leetcode.cn/u/zhong-v0/"}}}},"feature":true},"next_post":{"title":"new内存管理","uid":"9f557fa332d329d3a527e81492ff3945","slug":"C++new内存管理","date":"2022-10-15T16:13:20.000Z","updated":"2023-09-28T12:10:19.504Z","comments":true,"path":"api/articles/C++new内存管理.json","keywords":null,"cover":"https://cdn.statically.io/gh/moonlightleaf/pics@master/C++内存管理机制/View.1wlouym8jmn4.jpg","text":" 1.Overview 2.C++ Memory Primitives 分配 释放 类属 可否重载 malloc() free() C函数 不可 new del...","link":"","photos":[],"count_time":{"symbolsCount":"6.1k","symbolsTime":"6 mins."},"categories":[{"name":"C++","slug":"C","count":1,"path":"api/categories/C.json"}],"tags":[{"name":"C++","slug":"C","count":1,"path":"api/tags/C.json"}],"author":{"name":"月下叶子","slug":"blog-author","avatar":"https://cdn.statically.io/gh/moonlightleaf/pics@master/about/博客头像.1rm6v48dfu1s.jpg","link":"/","description":"日月东升西落，未曾负你我","socials":{"github":"https://github.com/moonlightleaf","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/leaf_in_the_moon","juejin":"","customs":{"leetcode":{"icon":"/svg/leetcode.svg","link":"https://leetcode.cn/u/zhong-v0/"}}}},"feature":true}}